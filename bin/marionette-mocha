#! /usr/bin/env node

var Mocha = require('mocha'),
    Parent = require('../lib/parentrunner').ParentRunner,
    argv = process.argv.slice(2),
    program = require('commander');

var parsedArgv = program.
  option('-H, --host [host]', 
         'host module to use defaults to marionette-b2gdesktop-host').
  option('-R, --reporter [reporter]', 'mocha reporter to use').
  option('--profile-base [json or js file]', 
         'default profile options to use in all tests.').
  option('--profile-builder [builder]', 'profile generation module').
  parse(process.argv);


var Reporter;
try {
  Reporter = require(program.reporter);
} catch (e) {
  Reporter = require('mocha/lib/reporters/' + (program.reporter || 'dot'));
}

var Host;
try {
  Host = require(program.host);
} catch (e) {
  // b2g-desktop is the default host
  Host = require('marionette-b2gdesktop-host');
}

var ProfileBuilder;
try {
  ProfileBuilder = require(program.profileBuilder);
} catch (e) {
  ProfileBuilder = require('marionette-profile-builder');
}

// parse base profile options
var profileBase;
if (program.profileBase) {
  // remember because require is used json files or JS files can be used.
  profileBase = require(program.profileBase);
}

// attempt to find the reporter argument
var runner = new Parent(argv);
runner.run({
  Reporter: Reporter,
  Host: Host,
  ProfileBuilder: ProfileBuilder,
  profileBase: profileBase
});

// pipe stdout & stderr.
runner.process.stdout.pipe(process.stdout);
runner.process.stderr.pipe(process.stderr);

runner.process.on('exit', process.exit);
